@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div id="app" class="text-center">
    <h1 class="display-4">{{ msg }}</h1>

    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <button v-on:click="changeMsg" class="btn btn-primary">Change word</button>
    <button v-on:click="getops" class="btn btn-success">Change word</button>
    <hr />
    <input v-model="testinput" type = "text" />

    <div>{{testinput}}</div>


    <hr />
    <label for="ice-cream-choice">Choose a flavor:</label>
    <input list="ice-cream-flavors" id="ice-cream-choice" name="ice-cream-choice" />

    <datalist id="ice-cream-flavors">
        <option v-for="option in options">{{ option }}</option>
    </datalist>
</div>


@section Scripts{
    <script src="~/lib/vue/dist/vue.global.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
        const { createApp } = Vue;
        createApp({
            data() {
                return {
                    testinput:"",
                    msg: "@Model.Message",
                    info: "",
                    options: ['Test', 'Test1', 'Test2', 'Microsoft', 'Medium']
                };
            },
            watch: {
                testinput(newText, oldText) {
                    if (newText.length >= 5) {
                        this.msg = "Text over 5 chars";
                    }
                }

            },
            methods: {
                changeMsg() {
                    this.msg = "Change to new Vue data";
                },
                getops() {
                    axios.get("/Index/?handler=GetOption")
                        .then(res => {
                            this.options = res.data
                        })
                        .catch(function(error) {
                            console.log(error)
                        });
                }

            }
        }).mount("#app");
    </script>
}